% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opt-zquadratic.R
\docType{class}
\name{ZQuadratic-class}
\alias{ZQuadratic}
\alias{ZQuadratic-class}
\title{ZQuadratic}
\description{
Build piecewise quadratic log-probability density functions
}
\details{
This is an auxiliary Reference Class in this package.
Objects of this reference class are created by opt objects, to represent 
the p.d.f. of transformed, orthogonal parameters. One object is created per 
p.d.f. parameter. Users of the package needn't interact with these
objects directly; instead, they should call opt object methods. 
PQFA = piecewise quadratic approximation to log-probability density function.
}
\section{Fields}{

\describe{
\item{\code{n}}{numeric No. points of exact p.d.f. evaluations}

\item{\code{x}}{numeric Univariate z-coordinates of the n points}

\item{\code{y}}{numeric Exact p.d.f. evaluations of the n points}

\item{\code{beta0}}{numeric Intercepts of PQFA}

\item{\code{beta1}}{numeric Slopes of PQFA}

\item{\code{beta2}}{numeric Coeffs. of quadratic terms in PQFA}

\item{\code{dx}}{numeric Distances between adjac. z-coordinates}

\item{\code{normct}}{numeric Normalizing constant of PQFA}

\item{\code{pcdf}}{numeric Partial cdf associated with PQFA}

\item{\code{fns}}{list Auxiliary functions (in R or Fortran)}
}}
\section{Methods}{

\describe{
\item{\code{cdf(z)}}{Cumulative distribution function of the transformed z-parameter.

      @param z numeric Input (transformed) parameter for the approx. pdf

      @result Evaluation(s) of the approximate c.d.f.
      }

\item{\code{iget.coord()}}{Returns transformed z-coordinates}

\item{\code{iget.logd()}}{Returns exact p.d.f. evaluations}

\item{\code{iget.multiply.constant(k)}}{Multiplies random variable (Z-parameter) by constant}

\item{\code{initialize(x = NULL, y = NULL, useFortran = TRUE)}}{Create a new ZQuadratic object.

      @param x numeric Vector of n z-coordinates, n odd, x[(n-1)/2 + 1] = 0 

      @param y numeric Vector of n exact log-pdf evaluations, made at x 

      @param useFortran Should Fortran fns. be used instead of R fns.?
      }

\item{\code{invcdf(p)}}{Inverse c.d.f. of the input probability.

      @param p numeric A probability

      @result Evaluation(s) of the approximate inverse c.d.f.
      }

\item{\code{iset.operate(operation, operand, operand.name, operand.side, my.name)}}{Performs arithmetic operation on random variable (Z-parameter)}

\item{\code{is.operation.allowed(operation, argclass)}}{Checks if arithmetic operation is allowed}

\item{\code{pdf(z, do.log = FALSE)}}{Probability density function of the transformed z-parameter

      @param z numeric Input (transformed) parameter for the approx. pdf

      @param do.log logical Log-transform the approx. pdf evaluation?

      @result Evaluation(s) of the approximate pdf
      }

\item{\code{plot.fit(do.log = TRUE)}}{Plot the piecewise approximation to the p.d.f.
@param do.log logical Display log-p.d.f.?}
}}
\examples{
x <- c(-4:4)
y <- dnorm(x, log = TRUE)
zq <- ZQuadratic(x = x, y = y)
do.log <- TRUE #switch to FALSE to see p.d.f.
zq$plot.fit(do.log)
lines(seq(-4, 4, 0.1), dnorm(seq(-4, 4, 0.1),
      log = do.log), ty = "l", lwd = 1, lty = 2)

}

